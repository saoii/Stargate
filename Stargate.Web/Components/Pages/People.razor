@page "/People"
@rendermode InteractiveServer

@using Stargate.Services.Models
@using Stargate.Services.Models.Dto;
@using Stargate.Web.Services;


@inject PersonDataService service;

<MyMudProviders />

<PageTitle>People</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">People</MudText>
<MudText Class="mb-8">This component demonstrates fetching data from the server.</MudText>

@if (people == null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudTable Items="people" Hover="true" SortLabel="Sort By" Elevation="0">
        <HeaderContent>
            <MudTh>UserName</MudTh>
            <MudTh>FirstName</MudTh>
            <MudTh>LastName</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="UserName">@context.UserName</MudTd>
                <MudTd DataLabel="FirstName">@context.FirstName</MudTd>
                <MudTd DataLabel="LastName">@context.LastName</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[]{50, 100}" />
        </PagerContent>
    </MudTable>
}

@code {
    private Person[]? people;

    protected override async Task OnInitializedAsync()
    {
        people = await service.GetAll();
    }

}
